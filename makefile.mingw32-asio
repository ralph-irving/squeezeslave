# Windows 32-bit makefile using Cygwin 2.573.2.3 setup.exe
# Requires Windows DirectX SDK Nov 2008.  You must download DXSDK_Nov08.exe from
# http://www.microsoft.com and place the file in sources/
# Builds libportaudio v19 to support Steinberg's ASIO SDK
# http://www.steinberg.net/en/company/3rd_party_developer/sdk_download_portal.html
# ASIO NOT Complete, currently still uses DirectX.
#
OS=mingw32
CC=gcc
CXX=g++
TAR=tar
SED=sed
PATCH=patch
CFLAGS=-DSLIMPROTO_DEBUG -DPORTAUDIO_DEV -DPA_ASIO -Wall -O2 -mno-cygwin -march=i586
LDFLAGS=-s

INCLUDE=-Ilib/pthread/$(OS)/include -Ilib/getopt -Ilib/libportaudio/$(OS)/include -Ilib/portmixer/px_common -Isrc -Ilib/libmad/$(OS)/include -Ilib/vorbis/$(OS)/include -Ilib/flac/$(OS)/include

LIBMAD=libmad-0.15.1b
LIBOGG=libogg-1.1.4
LIBVORBIS=libvorbis-1.2.3
LIBFLAC=flac-1.2.1
LIBPTHREAD=pthreads-w32-2-8-0
7ZIPSRC=p7zip_4.65
LIBPORTAUDIO=pa_snapshot-20091205
ASIOSDK=asiosdk2.2
PORTMIXERFILES:=lib/portmixer/px_none/px_none.c

GETOPTFILES=lib/getopt/getopt.c lib/getopt/getopt1.c

SLIMPROTOFILES:=src/slimaudio/slimaudio_http.c src/slimaudio/slimaudio_decoder.c src/slimaudio/slimaudio_decoder_flac.c src/slimaudio/slimaudio_decoder_mad.c src/slimaudio/slimaudio_decoder_vorbis.c src/slimaudio/slimaudio_decoder_pcm.c src/slimaudio/slimaudio_output.c src/slimaudio/slimaudio_buffer.c src/slimaudio/slimaudio.c src/slimproto/slimproto.c

SQUEEZESLAVEFILES:=src/squeezeslave/squeezeslave.c src/squeezeslave/help.c src/squeezeslave/daemonize.c src/squeezeslave/interactive.c

LIBSLIMPROTO=lib/libslimproto.a

LIBGETOPT=lib/libgetopt.a

SUPPORTLIBS=lib/libportaudio/$(OS)/lib/libportaudio.a lib/libmad/$(OS)/lib/libmad.a lib/vorbis/$(OS)/lib/libvorbisfile.a lib/vorbis/$(OS)/lib/libvorbis.a lib/vorbis/$(OS)/lib/libvorbisenc.a lib/vorbis/$(OS)/lib/libogg.a lib/flac/$(OS)/lib/libFLAC.a lib/pthread/$(OS)/lib/libpthreadGC2.a

7ZIP=bin/7z.exe

SQUEEZESLAVE=bin/squeezeslave.exe

.c.o:
	$(CC) $(CFLAGS) -c $(INCLUDE) $< -o $*.o

all: $(SUPPORTLIBS) $(SQUEEZESLAVE)

$(7ZIP):
	cd lib/7z/$(OS)/build && ${TAR} --bzip -xf ../../../../sources/$(7ZIPSRC)_src_all.tar.bz2
	cd lib/7z/$(OS)/build/$(7ZIPSRC) && cp -p makefile.cygwin makefile.machine
	cd lib/7z/$(OS)/build/$(7ZIPSRC) && $(SED) -i "s| -DHAVE_GCCVISIBILITYPATCH -fvisibility=hidden -fvisibility-inlines-hidden||g" makefile.machine
	cd lib/7z/$(OS)/build/$(7ZIPSRC) && make clean && make 7z
	cp -pr lib/7z/$(OS)/build/$(7ZIPSRC)/bin/{7z.exe,7z.so,Codecs} bin/

lib/pthread/$(OS)/lib/libpthreadGC2.a: $(7ZIP)
	cd lib/pthread/$(OS)/build && ../../../../$(7ZIP) x -y ../../../../sources/$(LIBPTHREAD)-release.exe Pre-built.2/lib/libpthreadGC2.a Pre-built.2/lib/pthreadGC2.dll Pre-built.2/include/semaphore.h Pre-built.2/include/pthread.h Pre-built.2/include/sched.h > /dev/null
	cp -f lib/pthread/$(OS)/build/Pre-built.2/lib/{libpthreadGC2.a,pthreadGC2.dll} lib/pthread/$(OS)/lib
	cp -f lib/pthread/$(OS)/build/Pre-built.2/lib/pthreadGC2.dll bin/
	cp -f lib/pthread/$(OS)/build/Pre-built.2/include/{semaphore.h,pthread.h,sched.h} lib/pthread/$(OS)/include

lib/libportaudio/$(OS)/lib/libportaudio.a: lib/pthread/$(OS)/lib/libpthreadGC2.a $(7ZIP)
	cd lib/libportaudio/$(OS)/build && ${TAR} -xzf ../../../../sources/$(LIBPORTAUDIO).tar.gz
	cd lib/libportaudio/$(OS)/build/portaudio && ../../../../../$(7ZIP) x -y ../../../../../sources/$(ASIOSDK).zip > /dev/null
	cd lib/libportaudio/$(OS)/build/portaudio && ${PATCH} -p0 -i ../../../../../patches/build-portaudio-asiosdk2.patch
	cd lib/libportaudio/$(OS)/build && ${PATCH} -p0 -i ../../../../patches/build-portaudio.patch
	cd lib/libportaudio/$(OS)/build/portaudio && CC="$(CC) -I`pwd`../../../../pthread/$(OS)/include" CFLAGS="$(CFLAGS) -I`pwd`../../../../pthread/$(OS)/include" CPPFLAGS="$(CFLAGS) -I`pwd`../../../../pthread/$(OS)/include" LDFLAGS="$(LDFLAGS) -L`pwd`../../../../pthread/$(OS)/lib" ./configure --with-host_os=mingw --with-winapi=asio --with-asiodir=`pwd`/ASIOSDK2 --without-jack --enable-shared=no
	cd lib/libportaudio/$(OS)/build && ${PATCH} -p0 -i ../../../../patches/build-portaudio-asio.patch
	cd lib/libportaudio/$(OS)/build/portaudio && make lib/libportaudio.la
	cp -p lib/libportaudio/$(OS)/build/portaudio/lib/.libs/libportaudio.a lib/libportaudio/$(OS)/lib
	cp -p lib/libportaudio/$(OS)/build/portaudio/include/portaudio.h lib/libportaudio/$(OS)/include

lib/libmad/$(OS)/lib/libmad.a:
	cd lib/libmad/$(OS)/build && ${TAR} --bzip -xf ../../../../sources/$(LIBMAD).tar.bz2
	cd lib/libmad/$(OS)/build/$(LIBMAD) && CC="$(CC)" CFLAGS="$(CFLAGS)" CPPFLAGS="$(CFLAGS)" LDFLAGS="$(LDFLAGS)" ./configure --enable-shared=no --enable-fpm=intel
	cd lib/libmad/$(OS)/build/$(LIBMAD) && make clean && make
	cp -p lib/libmad/$(OS)/build/$(LIBMAD)/.libs/libmad.a lib/libmad/$(OS)/lib
	cp -p lib/libmad/$(OS)/build/$(LIBMAD)/mad.h lib/libmad/$(OS)/include

lib/vorbis/$(OS)/lib/libogg.a:
	cd lib/vorbis/$(OS)/build && ${TAR} --bzip -xf ../../../../sources/$(LIBOGG).tar.bz2
	cd lib/vorbis/$(OS)/build/$(LIBOGG) && CC="$(CC)" CFLAGS="$(CFLAGS)" CPPFLAGS="$(CFLAGS)" LDFLAGS="$(LDFLAGS)" ./configure --host=i686-pc-mingw32 --build=i686-pc-cygwin --enable-shared=no
	cd lib/vorbis/$(OS)/build/$(LIBOGG) && make clean && make
	cp -p lib/vorbis/$(OS)/build/$(LIBOGG)/src/.libs/libogg.a lib/vorbis/$(OS)/lib
	cp -p lib/vorbis/$(OS)/build/$(LIBOGG)/include/ogg/{ogg.h,os_types.h,config_types.h} lib/vorbis/$(OS)/include/ogg

lib/vorbis/$(OS)/lib/libvorbisfile.a: lib/vorbis/$(OS)/lib/libogg.a
lib/vorbis/$(OS)/lib/libvorbisenc.a: lib/vorbis/$(OS)/lib/libogg.a
lib/vorbis/$(OS)/lib/libvorbis.a: lib/vorbis/$(OS)/lib/libogg.a
	cd lib/vorbis/$(OS)/build && ${TAR} --bzip -xf ../../../../sources/$(LIBVORBIS).tar.bz2
	cd lib/vorbis/$(OS)/build/$(LIBVORBIS) && CC="$(CC)" OGG_CFLAGS=-I`pwd`/../../include OGG_LIBS=-L`pwd`/../../lib CFLAGS="$(CFLAGS)" CPPFLAGS="$(CFLAGS)" LDFLAGS="$(LDFLAGS) ${OGG_LIBS}" ./configure --host=i686-pc-mingw32 --build=i686-pc-cygwin --enable-shared=no
	cd lib/vorbis/$(OS)/build/$(LIBVORBIS) && $(SED) -i "s:^LIBS =.*:LIBS = `pwd`/../../lib/libogg.a:" examples/Makefile
	cd lib/vorbis/$(OS)/build/$(LIBVORBIS) && make clean && make
	cp -p lib/vorbis/$(OS)/build/$(LIBVORBIS)/lib/.libs/{libvorbis.a,libvorbisenc.a,libvorbisfile.a} lib/vorbis/$(OS)/lib
	cp -p lib/vorbis/$(OS)/build/$(LIBVORBIS)/include/vorbis/{codec.h,vorbisenc.h,vorbisfile.h} lib/vorbis/$(OS)/include/vorbis

lib/flac/$(OS)/lib/libFLAC.a: lib/vorbis/$(OS)/lib/libogg.a
	cd lib/flac/$(OS)/build && ${TAR} --bzip -xf ../../../../sources/$(LIBFLAC).tar.bz2
	cd lib/flac/$(OS)/build/$(LIBFLAC) && CC="$(CC)" OGG_CFLAGS=-I`pwd`/../../include OGG_LIBS=`pwd`/../../lib/libogg.a CFLAGS="$(CFLAGS)" CPPFLAGS="$(CFLAGS)" LDFLAGS="$(LDFLAGS) ${OGG_LIBS}" ./configure --enable-shared=no --disable-oggtest --with-ogg-libraries=`pwd`/../../../../vorbis/$(OS)/lib --with-ogg-includes=`pwd`/../../../../vorbis/$(OS)/include
	cd lib/flac/$(OS)/build/$(LIBFLAC) && $(SED) -i "s:^#   error$$:#   define SIZE_T_MAX UINT_MAX:" include/share/alloc.h
	cd lib/flac/$(OS)/build/$(LIBFLAC)/src/libFLAC && make clean && make
	cp -p lib/flac/$(OS)/build/$(LIBFLAC)/src/libFLAC/.libs/libFLAC.a lib/flac/$(OS)/lib
	cp -p lib/flac/$(OS)/build/$(LIBFLAC)/include/FLAC/{all.h,export.h,ordinals.h,assert.h,format.h,stream_decoder.h,callback.h,metadata.h,stream_encoder.h} lib/flac/$(OS)/include/FLAC

$(LIBSLIMPROTO): $(SLIMPROTOFILES:.c=.o)
	ar cru $(LIBSLIMPROTO) $^
	ranlib $(LIBSLIMPROTO)

$(LIBGETOPT): $(GETOPTFILES:.c=.o)
	ar cru $(LIBGETOPT) $^
	ranlib $(LIBGETOPT)

$(SQUEEZESLAVE): $(SQUEEZESLAVEFILES:.c=.o) $(PORTMIXERFILES:.c=.o) $(LIBSLIMPROTO) $(LIBGETOPT) $(SUPPORTLIBS)
	$(CC) $(LDFLAGS) -mno-cygwin -o $(SQUEEZESLAVE) $^ -lm -lstdc++ -lws2_32 -lwinmm -lole32

clean:
	-@rm -f $(SLIMPROTOFILES:.c=.o)
	-@rm -f $(SQUEEZESLAVEFILES:.c=.o)
	-@rm -f $(PORTMIXERFILES:.c=.o)
	-@rm -f $(GETOPTFILES:.c=.o)
	-@rm -f $(LIBSLIMPROTO)
	-@rm -f $(LIBGETOPT)
	-@rm -f $(SQUEEZESLAVE)

realclean: clean
	-@rm -rf lib/libmad/$(OS)/build/$(LIBMAD)
	-@rm -rf lib/vorbis/$(OS)/build/$(LIBOGG)
	-@rm -rf lib/vorbis/$(OS)/build/$(LIBVORBIS)
	-@rm -rf lib/flac/$(OS)/build/$(LIBFLAC)
	-@rm -rf lib/pthread/$(OS)/build/Pre-built.2
	-@rm -rf lib/7z/$(OS)/build/$(7ZIPSRC)
	-@rm -rf bin/{7z.exe,7z.so,Codecs}
	-@rm -rf lib/libportaudio/$(OS)/build/portaudio
	-@rm -f lib/libmad/$(OS)/lib/libmad.a lib/libmad/$(OS)/include/mad.h
	-@rm -f lib/vorbis/$(OS)/lib/libogg.a lib/vorbis/$(OS)/include/ogg/{ogg.h,os_types.h,config_types.h}
	-@rm -f lib/vorbis/$(OS)/lib/{libvorbis.a,libvorbisenc.a,libvorbisfile.a}
	-@rm -f lib/vorbis/$(OS)/include/vorbis/{codec.h,vorbisenc.h,vorbisfile.h}
	-@rm -f lib/flac/$(OS)/lib/libFLAC.a
	-@rm -f lib/flac/$(OS)/include/FLAC/{all.h,export.h,ordinals.h,assert.h,format.h,stream_decoder.h,callback.h,metadata.h,stream_encoder.h}
	-@rm -f lib/pthread/$(OS)/lib/{libpthreadGC2.a,pthreadGC2.dll} lib/pthread/$(OS)/include/{semaphore.h,pthread.h,sched.h} bin/pthreadGC2.dll
	-@rm -f lib/libportaudio/$(OS)/lib/libportaudio.a lib/libportaudio/$(OS)/include/portaudio.h

