Index: Slim/Player/SqueezeSlave.pm
===================================================================
--- Slim/Player/SqueezeSlave.pm	(revision 30324)
+++ Slim/Player/SqueezeSlave.pm	(working copy)
@@ -233,15 +233,22 @@
 }
 
 sub statHandler {
-	my ($client, $code) = @_;
+	my ($client, $code, $jiffies, $error_code) = @_;
+
+	if ($code eq 'STMc') {
+		$client->streamStartTimestamp($jiffies);
+	} else {
+		return if ! defined($client->streamStartTimestamp());
+	}
 	
 	if ($code eq 'STMd') {
 		$client->readyToStream(1);
 		$client->controller()->playerReadyToStream($client);
 	} elsif ($code eq 'STMn') {
 		$client->readyToStream(1);
-		logError($client->id(). ": Decoder does not support file format");
-		$client->controller()->playerStreamingFailed($client, 'PROBLEM_OPENING');
+		logError($client->id(). ": Decoder does not support file format, code $error_code");
+		my $string = $error_code ? 'DECODE_ERROR_' . $error_code : 'PROBLEM_OPENING';
+		$client->controller()->playerStreamingFailed($client, $string);
 	} elsif ($code eq 'STMl') {
 		$client->bufferReady(1);
 		$client->controller()->playerBufferReady($client);
@@ -259,16 +266,9 @@
 		$client->controller()->playerOutputUnderrun($client);
 	} elsif ($code eq 'EoS') {
 		$client->controller()->playerEndOfStream($client);
-	} else {		
-		if ( !$client->bufferReady() && ($client->outputBufferFullness() > 40_000) && $client->isSynced(1) ) {
-			# Fake up buffer ready (0.25s audio)
-			$client->bufferReady(1);	# to stop multiple starts 
-			$client->controller()->playerBufferReady($client);
-		} else {
-			$client->controller->playerStatusHeartbeat($client);
-		}
-	}	
-	
+	} else {
+		$client->controller->playerStatusHeartbeat($client);
+	}      
 }
 
 sub startAt {
